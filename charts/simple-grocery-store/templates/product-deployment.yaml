apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.productService.deployment.name }}
  labels:
    app: {{ .Values.productService.name }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.productService.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.productService.name }}
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.productService.name }}
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.productService.podSecurityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.productService.podSecurityContext.runAsUser }}
        runAsGroup: {{ .Values.productService.podSecurityContext.runAsGroup }}
        fsGroup: {{ .Values.productService.podSecurityContext.fsGroup }}
      {{- end }}
      containers:
      - name: {{ .Values.productService.name }}
        image: "{{ .Values.global.imageRegistry }}{{ .Values.productService.image.repository }}:{{ .Values.productService.image.tag }}"
        imagePullPolicy: {{ .Values.productService.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.productService.service.targetPort }}
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: {{ .Values.productService.env.NODE_ENV | quote }}
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: {{ .Values.productService.secret.name }}
              key: mongodb-uri
        livenessProbe:
          httpGet:
            path: /api/products
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/products
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.productService.resources | nindent 10 }}
        {{- if .Values.productService.containerSecurityContext.enabled }}
        securityContext:
          runAsNonRoot: {{ .Values.productService.containerSecurityContext.runAsNonRoot }}
          allowPrivilegeEscalation: {{ .Values.productService.containerSecurityContext.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.productService.containerSecurityContext.readOnlyRootFilesystem }}
          capabilities:
            drop:
            {{- toYaml .Values.productService.containerSecurityContext.dropCapabilities | nindent 14 }}
        {{- end }}
